/*
 * Netbeans 8.0 
 * JDK 1.7  
 */
package sistem.pakar.view;

import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import sistem.pakar.component.TableModelIntensitas;
import sistem.pakar.sugeno.Defuzzyfikasi;
import sistem.pakar.sugeno.DerajatKeanggotaan;
import sistem.pakar.sugeno.Gejala;
import sistem.pakar.sugeno.Rule;
import sistem.pakar.sugeno.WeightAverage;
import sistem.pakar.sugeno.inferensi.IntensitasGejala;
import swingx.component.table.renderer.TableCellColorAlignmentRenderer;

/**
 *
 * @author casper
 */
public class PanelNilaiIntesitas extends javax.swing.JPanel {

    /**
     * Creates new form PanelNilaiDerajatKeanggotaan
     */
    private TableModelIntensitas tableModel;
    private PanelDiagnosa panelDiagnosa;
    private FrameMain frameMain;

    public PanelNilaiIntesitas(FrameMain frameMain, PanelDiagnosa panelDiagnosa) {
        initComponents();
        this.frameMain = frameMain;
        this.panelDiagnosa = panelDiagnosa;

        tableModel = new TableModelIntensitas();
        table.setRowHeight(25);
    }

    public void setData(List<Gejala> vlist) {
        List<Gejala> list = new ArrayList<>();
        for (Gejala gejala : vlist) {
            if (gejala.isSelected()) {
                list.add(gejala);
            }
        }

        tableModel.setList(list);
        table.setModel(tableModel);

        new swingx.component.table.renderer.TableColumnSizeRenderer().setRenderSizeColumn(table, JTable.AUTO_RESIZE_OFF);
        table.getColumnModel().getColumn(1).setPreferredWidth(45);
        table.getColumnModel().getColumn(0).setPreferredWidth(100);

        table.getColumnModel().getColumn(0).setCellRenderer(new TableCellColorAlignmentRenderer(JLabel.CENTER));
        table.getColumnModel().getColumn(1).setCellRenderer(new TableCellColorAlignmentRenderer(JLabel.CENTER));
        table.getColumnModel().getColumn(2).setCellRenderer(new TableCellColorAlignmentRenderer(JLabel.CENTER));
        table.getColumnModel().getColumn(0).setCellRenderer(new DefaultTableCellRenderer() {

            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                JComboBox comboBox = new JComboBox(new Object[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10});
                comboBox.setSelectedItem(value);
                return comboBox;
            }
        });
        table.getColumnModel().getColumn(0).setCellEditor(
                new DefaultCellEditor(new JComboBox(new Object[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}))
        );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Masukkan Nilai Intensitas ( 1 - 10 )");

        jPanel2.setOpaque(false);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sistem/pakar/resources/process.png"))); // NOI18N
        jButton3.setText("Proses");
        jButton3.setPreferredSize(new java.awt.Dimension(120, 35));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sistem/pakar/resources/undo.png"))); // NOI18N
        jButton4.setText("Batal");
        jButton4.setPreferredSize(new java.awt.Dimension(120, 35));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sistem/pakar/resources/back.png"))); // NOI18N
        jButton5.setText("Kembali");
        jButton5.setPreferredSize(new java.awt.Dimension(120, 35));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        List<DerajatKeanggotaan> listKeanggotaans = new ArrayList<>();

        double[][] listGejala1 = new double[5][3];
        double[][] listGejala2 = new double[5][3];
        double[][] listGejala3 = new double[4][3];
        double[][] listGejala4 = new double[3][3];
        double[][] listGejala5 = new double[6][3];

        boolean[] listBool1 = {false, false, false, false, false};
        boolean[] listBool2 = {false, false, false, false, false};
        boolean[] listBool3 = {false, false, false, false};
        boolean[] listBool4 = {false, false, false};
        boolean[] listBool5 = {false, false, false, false, false, false};

        for (Gejala e : tableModel.getList()) {
            DerajatKeanggotaan keanggotaan = new DerajatKeanggotaan();
            keanggotaan.setKode(e.getKode());
            keanggotaan.setGejala(e.getGejala());
            keanggotaan.setKodeGangguan(e.getKodeGangguan());
            keanggotaan.setJenisGangguan(e.getJenisGangguan());
            keanggotaan.setNumber(e.getNumber());
            keanggotaan.setValue(e.getValue());
            keanggotaan.setSelected(e.isSelected());

            keanggotaan.setRingan(IntensitasGejala.getKeanggotaanJarang(e.getValue()));
            keanggotaan.setSedang(IntensitasGejala.getKeanggotaanSering(e.getValue()));
            keanggotaan.setBerat(IntensitasGejala.getKeanggotaanHampirSelalu(e.getValue()));
            listKeanggotaans.add(keanggotaan);
        }

        for (DerajatKeanggotaan e : listKeanggotaans) {
            if (e.getKodeGangguan().equals("P1")) {
                listGejala1[e.getNumber()][0] = e.getRingan();
                listGejala1[e.getNumber()][1] = e.getSedang();
                listGejala1[e.getNumber()][2] = e.getBerat();

                if (e.getKode().equals("G01")) {
                    listBool1[0] = true;
                }
                if (e.getKode().equals("G02")) {
                    listBool1[1] = true;
                }
                if (e.getKode().equals("G03")) {
                    listBool1[2] = true;
                }
                if (e.getKode().equals("G04")) {
                    listBool1[3] = true;
                }
                if (e.getKode().equals("G05")) {
                    listBool1[4] = true;
                }
            } else if (e.getKodeGangguan().equals("P2")) {
                listGejala2[e.getNumber()][0] = e.getRingan();
                listGejala2[e.getNumber()][1] = e.getSedang();
                listGejala2[e.getNumber()][2] = e.getBerat();
                if (e.getKode().equals("G06")) {
                    listBool2[0] = true;
                }
                if (e.getKode().equals("G07")) {
                    listBool2[1] = true;
                }
                if (e.getKode().equals("G08")) {
                    listBool2[2] = true;
                }
                if (e.getKode().equals("G09")) {
                    listBool2[3] = true;
                }
                if (e.getKode().equals("G10")) {
                    listBool2[4] = true;
                }
            } else if (e.getKodeGangguan().equals("P3")) {
                listGejala3[e.getNumber()][0] = e.getRingan();
                listGejala3[e.getNumber()][1] = e.getSedang();
                listGejala3[e.getNumber()][2] = e.getBerat();
                if (e.getKode().equals("G11")) {
                    listBool3[0] = true;
                }
                if (e.getKode().equals("G12")) {
                    listBool3[1] = true;
                }
                if (e.getKode().equals("G13")) {
                    listBool3[2] = true;
                }
                if (e.getKode().equals("G14")) {
                    listBool3[3] = true;
                }
            } else if (e.getKodeGangguan().equals("P4")) {
                listGejala4[e.getNumber()][0] = e.getRingan();
                listGejala4[e.getNumber()][1] = e.getSedang();
                listGejala4[e.getNumber()][2] = e.getBerat();
                if (e.getKode().equals("G15")) {
                    listBool4[0] = true;
                }
                if (e.getKode().equals("G16")) {
                    listBool4[1] = true;
                }
                if (e.getKode().equals("G17")) {
                    listBool4[2] = true;
                }
            } else if (e.getKodeGangguan().equals("P5")) {
                listGejala5[e.getNumber()][0] = e.getRingan();
                listGejala5[e.getNumber()][1] = e.getSedang();
                listGejala5[e.getNumber()][2] = e.getBerat();
                if (e.getKode().equals("G18")) {
                    listBool5[0] = true;
                }
                if (e.getKode().equals("G19")) {
                    listBool5[1] = true;
                }
                if (e.getKode().equals("G20")) {
                    listBool5[2] = true;
                }
                if (e.getKode().equals("G21")) {
                    listBool5[3] = true;
                }
                if (e.getKode().equals("G22")) {
                    listBool5[4] = true;
                }
                if (e.getKode().equals("G23")) {
                    listBool5[5] = true;
                }
            }
        }

        Rule rule = frameMain.getRule();
        rule.setListKeanggotaans(listKeanggotaans);

        rule.setListGejala1(listGejala1);
        rule.setListGejala2(listGejala2);
        rule.setListGejala3(listGejala3);
        rule.setListGejala4(listGejala4);
        rule.setListGejala5(listGejala5);

        rule.setListGejalaBool1(listBool1);
        rule.setListGejalaBool2(listBool2);
        rule.setListGejalaBool3(listBool3);
        rule.setListGejalaBool4(listBool4);
        rule.setListGejalaBool5(listBool5);

        List<WeightAverage> list = new ArrayList<>();

        double[] wa = new double[5];
        Defuzzyfikasi d = new Defuzzyfikasi();
        try {
            rule.rule1();
            List<WeightAverage> listWA = new ArrayList<>();
            List<Double> list1 = rule.getRule();
            List<Double> list2 = rule.getValueOutput();
            d.calcWeightAverage(list1, list2);
            wa[0] = d.getWeightAverage();
            System.out.println("WA : " + wa[0]);

            for (int i = 0; i < list1.size(); i++) {
                if (list1.get(i) != 0) {
                    int vx = 1 + i;
                    WeightAverage wax = new WeightAverage();
                    wax.setKode("R" + vx);
                    wax.setPredikatAturan(list1.get(i));
                    wax.setNilaiOutput(list2.get(i));
                    wax.setRule("RULE " + vx);
                    list.add(wax);
                }
            }

        } catch (Exception e) {
        }
        try {
            rule.rule2();
            List<WeightAverage> listWA = new ArrayList<>();
            List<Double> list1 = rule.getRule();
            List<Double> list2 = rule.getValueOutput();
            d.calcWeightAverage(list1, list2);
            wa[1] = d.getWeightAverage();

            for (int i = 0; i < list1.size(); i++) {
                if (list1.get(i) != 0) {
                    int vx = 244 + i;
                    WeightAverage wax = new WeightAverage();
                    wax.setKode("R" + vx);
                    wax.setPredikatAturan(list1.get(i));
                    wax.setNilaiOutput(list2.get(i));
                    wax.setRule("RULE " + vx);
                    list.add(wax);
                }
            }
        } catch (Exception e) {
        }
        try {
            rule.rule3();
            List<WeightAverage> listWA = new ArrayList<>();
            List<Double> list1 = rule.getRule();
            List<Double> list2 = rule.getValueOutput();
            d.calcWeightAverage(list1, list2);
            wa[2] = d.getWeightAverage();
            
            for (int i = 0; i < list1.size(); i++) {
                if (list1.get(i) != 0) {
                    int vx = 487 + i;
                    WeightAverage wax = new WeightAverage();
                    wax.setKode("R" + vx);
                    wax.setPredikatAturan(list1.get(i));
                    wax.setNilaiOutput(list2.get(i));
                    wax.setRule("RULE " + vx);
                    list.add(wax);
                }
            }
        } catch (Exception e) {
        }

        try {
            rule.rule4();
            List<WeightAverage> listWA = new ArrayList<>();
            List<Double> list1 = rule.getRule();
            List<Double> list2 = rule.getValueOutput();
            d.calcWeightAverage(list1, list2);
            wa[3] = d.getWeightAverage();
            
            for (int i = 0; i < list1.size(); i++) {
                if (list1.get(i) != 0) {
                    int vx = 595 + i;
                    WeightAverage wax = new WeightAverage();
                    wax.setKode("R" + vx);
                    wax.setPredikatAturan(list1.get(i));
                    wax.setNilaiOutput(list2.get(i));
                    wax.setRule("RULE " + vx);
                    list.add(wax);
                }
            }
        } catch (Exception e) {
        }
        try {
            rule.rule5();
            List<WeightAverage> listWA = new ArrayList<>();
            List<Double> list1 = rule.getRule();
            List<Double> list2 = rule.getValueOutput();
            d.calcWeightAverage(list1, list2);
            wa[4] = d.getWeightAverage();
            
            for (int i = 0; i < list1.size(); i++) {
                if (list1.get(i) != 0) {
                    int vx = 676 + i;
                    WeightAverage wax = new WeightAverage();
                    wax.setKode("R" + vx);
                    wax.setPredikatAturan(list1.get(i));
                    wax.setNilaiOutput(list2.get(i));
                    wax.setRule("RULE " + vx);
                    list.add(wax);
                }
            }
            
        } catch (Exception e) {
        }

        panelDiagnosa.setListRule(list);
        panelDiagnosa.showPanel("card5");
        panelDiagnosa.getPanelHasil().setHasilDiagnosa(wa);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        frameMain.setPanel(new PanelMain(frameMain));
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        panelDiagnosa.showPanel("card1");
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
